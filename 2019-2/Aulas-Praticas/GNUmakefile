#
# Universidade Federal do Rio de Janeiro
# Escola Politecnica
# Departamento de Eletronica e de Computacao
# EEL270 - Computacao II - Turma 2019/2
# Prof. Marcelo Luiz Drumond Lanza
#
# Autor: Luiz Fernando Loureiro Leitao
# Descricao: implementacao do arquivo de dependencias para ambiente GNU/Linux.
#
# $Author: luiz.leitao $
# $Date: 2019/10/24 05:00:01 $
# $Log: GNUmakefile,v $
# Revision 1.40  2019/10/24 05:00:01  luiz.leitao
# Inclusao do prototipo da funcao DecodificarBase64.
# Inclusao do prototipo da funcao EncontrarPosicaoPonteiroCaractere.
# Implementacao da funcao DecodificarBase64.
# Implementacao da funcao EncontrarPosicaoPonteiroCaractere.
# Implementacao do programa de testes da funcao DecodificarBase64.
#
# Revision 1.39  2019/10/16 20:27:06  luiz.leitao
# Implementacao do arquivo de cabecalho referente a aula 09.
# Implementacao da funcao CodificarBase64.
# Implementacao do programa de testes da funcao CodificarBase64.
#
# Revision 1.38  2019/10/08 16:43:34  luiz.leitao
# Implementacao do arquivo de cabecalho referente a aula 08.
# Implementacao das funcoes MostrarMonitor, LimparMonitor, DesenharRetangulo e PreencherPoligono.
# Implementacao do programa de testes da funcao PreencherPoligono.
#
# Revision 1.37  2019/10/03 20:57:37  luiz.leitao
# Implementacao do arquivo de cabecalho referente a aula 07.
# Implementacao das funcoes MostrarMatriz1, MostrarMatriz2, MultiplicarMatrizes e MostrarMatrizResultado.
# Implementacao do programa de testes da funcao MultiplicarMatrizes.
#
# Revision 1.36  2019/10/03 05:35:35  luiz.leitao
# Inclusao do prototipo da funcao GerarPisPasep.
# Implementacao da funcao GerarPisPasep.
# Implementacao do programa de testes da funcao GerarPisPasep.
#
# Revision 1.35  2019/10/03 04:32:53  luiz.leitao
# Implementacao do arquivo de cabecalho referente a aula 06.
# Implementacao da funcao GerarDigitoVerificadorPisPasep.
# Implementacao do programa de testes da funcao GerarDigitoVerificadorPisPasep.
#
# Revision 1.34  2019/10/03 00:01:03  luiz.leitao
# Alteracoes adicionais no arquivo <aula0601.h>.
# Alteracoes adicionais no arquivo <aula0601.c>.
# Alteracoes adicionais no arquivo <aula0602a.c>.
# Alteracoes adicionais no arquivo <aula0602b.c>.
# Alteracoes adicionais no arquivo <aula0603a.c>.
# Alteracoes adicionais no arquivo <aula0603b.c>.
# Alteracoes adicionais no arquivo <aula0604.h>.
# Alteracoes adicionais no arquivo <aula0604.c>.
# Alteracoes adicionais no arquivo <aula0605a.c>.
# Alteracoes adicionais no arquivo <aula0605b.c>.
# Alteracoes adicionais no arquivo <aula0606a.c>.
# Alteracoes adicionais no arquivo <aula0606b.c>.
# Inclusao do prototipo da funcao GerarPisPasep.
# Implementacao da funcao GerarPisPasep.
# Implementacao do programa de testes da funcao GerarPisPasep.
#
# Revision 1.33  2019/09/20 04:26:26  luiz.leitao
# Implementacao do programa de testes da funcao ValidarPisPasep.
#
# Revision 1.32  2019/09/20 04:14:24  luiz.leitao
# Inclusao do prototipo da funcao ValidarPisPasep.
# Implementacao da funcao ValidarPisPasep.
# Implementacao do programa de testes da funcao ValidarPisPasep.
#
# Revision 1.31  2019/09/20 03:56:27  luiz.leitao
# Implementacao do programa de testes da funcao GerarDigitoVerificadorPisPasep.
#
# Revision 1.30  2019/09/20 03:42:37  luiz.leitao
# Implementacao do arquivo de cabecalho referente a aula 06.
# Implementacao da funcao GerarDigitoVerificadorPisPasep.
# Implementacao do programa de testes da funcao GerarDigitoVerificadorPisPasep.
#
# Revision 1.29  2019/09/20 03:06:53  luiz.leitao
# Implementacao do programa de testes da funcao ValidarPisPasep.
#
# Revision 1.28  2019/09/20 02:51:12  luiz.leitao
# Inclusao do prototipo da funcao ValidarPisPasep.
# Implementacao da funcao ValidarPisPasep.
# Implementacao do programa de testes da funcao ValidarPisPasep.
#
# Revision 1.27  2019/09/17 17:39:23  luiz.leitao
# Implementacao do programa de testes da funcao GerarDigitoVerificadorPisPasep.
#
# Revision 1.26  2019/09/17 17:11:34  luiz.leitao
# Implementacao do arquivo de cabecalho referente a aula 06.
# Implementacao da funcao GerarDigitoVerificadorPisPasep.
# Implementacao do programa de testes da funcao GerarDigitoVerificadorPisPasep.
#
# Revision 1.25  2019/09/12 13:05:51  luiz.leitao
# Implementacao do algoritmo da Serie Harmonica Alternada utilizando recursividade e a funcao pow.
#
# Revision 1.24  2019/09/12 12:50:21  luiz.leitao
# Implementacao do algoritmo da Serie Harmonica Alternada utilizando o laco de repeticao while e a funcao CalcularExponencial.
#
# Revision 1.23  2019/09/10 17:49:57  luiz.leitao
# Implementacao do algoritmo da Serie Harmonica Alternada utilizando o laco de repeticao for e a funcao CalcularExponencial.
#
# Revision 1.22  2019/09/10 17:37:12  luiz.leitao
# Implementacao do algoritmo da Serie Harmonica Alternada utilizando o laco de repeticao do ... while e a funcao CalcularExponencial.
#
# Revision 1.21  2019/09/10 17:20:53  luiz.leitao
# Implementacao do arquivo de cabecalho referente a aula 05.
# Implementacao do algoritmo da Serie Harmonica Alternada utilizando recursividade e a funcao CalcularExponencial.
# Implementacao do programa de testes.
#
# Revision 1.20  2019/09/04 12:16:40  luiz.leitao
# Implementacao do algoritmo de potenciacao utilizando o laco de repeticao while.
#
# Revision 1.19  2019/09/04 12:06:53  luiz.leitao
# Implementacao do algoritmo de potenciacao utilizando o laco de repeticao for.
#
# Revision 1.18  2019/09/04 11:40:46  luiz.leitao
# Implementacao do algoritmo de potenciacao utilizando o laco de repeticao do ... while.
#
# Revision 1.17  2019/09/04 10:43:59  luiz.leitao
# Implementacao do arquivo de cabecalho referente a aula 04.
# Implementacao do algoritmo de potenciacao utilizando recursividade.
# Implementacao do programa de testes.
#
# Revision 1.16  2019/08/30 04:56:33  luiz.leitao
# Implementacao do algoritmo da Serie de Fibonacci utilizando o laco de repeticao while.
#
# Revision 1.15  2019/08/30 04:46:56  luiz.leitao
# Implementacao do algoritmo da Serie de Fibonacci utilizando o laco de repeticao for.
#
# Revision 1.14  2019/08/30 04:31:12  luiz.leitao
# Implementacao do algoritmo da Serie de Fibonacci utilizando o laco de repeticao do ... while.
#
# Revision 1.13  2019/08/30 03:51:28  luiz.leitao
# Implementacao do arquivo de cabecalho referente a aula 03.
# Implementacao do algoritmo da Serie de Fibonacci utilizando recursividade.
# Implementacao do programa de testes.
#
# Revision 1.12  2019/08/20 17:58:33  luiz.leitao
# Implementacao do algoritmo de MDC utilizando o laco de repeticao while.
#
# Revision 1.11  2019/08/20 17:51:25  luiz.leitao
# Implementacao do algoritmo de MDC utilizando o laco de repeticao for.
#
# Revision 1.10  2019/08/20 17:42:26  luiz.leitao
# Implementacao do algoritmo de MDC utilizando o laco de repeticao do ... while.
#
# Revision 1.9  2019/08/20 17:26:00  luiz.leitao
# Implementacao do arquivo de cabecalho referente a aula 02.
# Implementacao do algoritmo de MDC utilizando recursividade.
# Implementacao do programa de testes.
#
# Revision 1.8  2019/08/16 20:46:10  luiz.leitao
# Inclusao dos tipos basicos com os modificadores de sinal e com os modificadores de largura.
#
# Revision 1.7  2019/08/16 20:31:18  luiz.leitao
# Inclusao dos tipos basicos com os modificadores de largura.
#
# Revision 1.6  2019/08/16 20:16:55  luiz.leitao
# Inclusao dos tipos basicos com os modificadores de sinal.
#
# Revision 1.5  2019/08/16 19:55:18  luiz.leitao
# Inclusao dos modificadores de sinal combinados com os modificadores de largura.
#
# Revision 1.4  2019/08/16 05:45:25  luiz.leitao
# Inclusao dos modificadores de largura.
#
# Revision 1.3  2019/08/16 05:29:09  luiz.leitao
# Inclusao dos modificadores de sinal.
#
# Revision 1.2  2019/08/16 05:10:09  luiz.leitao
# Inclusao dos tipos basicos da linguagem.
#
# Revision 1.1  2019/08/15 04:46:43  luiz.leitao
# Initial revision
#










# Macro referente ao nome do sistema operacional utilizado.

OS = $(shell uname -s)





# Macros referentes a compilacao e a link-edicao (gcc como programa padrao).

CC = gcc
LD = gcc





# Declaracao condicional usada quando ha a escolha explicita pelo gcc (make cc=GCC).

ifeq ($(cc), GCC)
CC = gcc
LD = gcc
endif





# Declaracao condicional usada quando ha a escolha explicita pelo clang (make cc=CLANG).

ifeq ($(cc), CLANG)
CC = clang
LD = clang
endif





# Macros referentes aos argumentos passados tanto na compilacao quanto na link-edicao.

CFLAGS = -Wall -std=c99
LFLAGS = -Wall -std=c99





# Macros referente ao comando da criacao da biblioteca estatica.

AR = ar
AFLAGS = -r





# Macros referentes aos codigos-objeto da aula pratica 01.

AULA0101OBJS = aula0101.o
AULA0102OBJS = aula0102.o
AULA0103OBJS = aula0103.o
AULA0104OBJS = aula0104.o
AULA0105OBJS = aula0105.o
AULA0106OBJS = aula0106.o
AULA0107OBJS = aula0107.o
AULA0108OBJS = aula0108.o





# Macros referentes aos codigos-objeto da aula pratica 02.

AULA0202AOBJS = aula0201a.o aula0202.o
AULA0202BOBJS = aula0201b.o aula0202.o
AULA0202COBJS = aula0201c.o aula0202.o
AULA0202DOBJS = aula0201d.o aula0202.o





# Macros referentes aos codigos-objeto da aula pratica 03.

AULA0302AOBJS = aula0301a.o aula0302.o
AULA0302BOBJS = aula0301b.o aula0302.o
AULA0302COBJS = aula0301c.o aula0302.o
AULA0302DOBJS = aula0301d.o aula0302.o





# Macros referentes aos codigos-objeto da aula pratica 04.

AULA0402AOBJS = aula0401a.o aula0402.o
AULA0402BOBJS = aula0401b.o aula0402.o
AULA0402COBJS = aula0401c.o aula0402.o
AULA0402DOBJS = aula0401d.o aula0402.o





# Macros referentes aos codigos-objeto da aula pratica 05.

AULA0502AOBJS = aula0501a.o aula0502.o
AULA0502BOBJS = aula0501b.o aula0502.o
AULA0502COBJS = aula0501c.o aula0502.o
AULA0502DOBJS = aula0501d.o aula0502.o
AULA0502EOBJS = aula0501e.o aula0502.o





# Macros referentes aos codigos-objeto da aula pratica 06.

AULA0602AOBJS = aula0601.o aula0602a.o
AULA0602BOBJS = aula0601.o aula0602b.o
AULA0603AOBJS = aula0601.o aula0603a.o
AULA0603BOBJS = aula0601.o aula0603b.o
AULA0605AOBJS = aula0604.o aula0605a.o
AULA0605BOBJS = aula0604.o aula0605b.o
AULA0606AOBJS = aula0604.o aula0606a.o
AULA0606BOBJS = aula0604.o aula0606b.o
AULA0607OBJS = aula0601.o aula0607.o
AULA0609OBJS = aula0608.o aula0609.o
AULA0610OBJS = aula0608.o aula0610.o





# Macros referentes aos codigos-objeto da aula pratica 07.

AULA0702OBJS = aula0701.o aula0702.o





# Macros referentes aos codigos-objeto da aula pratica 08.

AULA0802OBJS = aula0801.o aula0802.o





# Macros referentes aos codigos-objeto da aula pratica 09.

AULA0902OBJS = aula0901.o aula0902.o
AULA0903OBJS = aula0901.o aula0903.o





# Macro referente aos executaveis da aula pratica 01.

AULA01 = aula0101\
	 aula0102\
	 aula0103\
	 aula0104\
	 aula0105\
	 aula0106\
	 aula0107\
	 aula0108





# Macro referente aos executaveis da aula pratica 02.

AULA02 = aula0202a\
	 aula0202b\
	 aula0202c\
	 aula0202d





# Macro referente aos executaveis da aula pratica 03.

AULA03 = aula0302a\
	 aula0302b\
	 aula0302c\
	 aula0302d





# Macro referente aos executaveis da aula pratica 04.

AULA04 = aula0402a\
	 aula0402b\
	 aula0402c\
	 aula0402d





# Macro referente aos executaveis da aula pratica 05.

AULA05 = aula0502a\
	 aula0502b\
	 aula0502c\
	 aula0502d\
	 aula0502e





# Macro referente aos executaveis da aula pratica 06.

AULA06 = aula0602a\
	 aula0602b\
	 aula0603a\
	 aula0603b\
	 aula0605a\
	 aula0605b\
	 aula0606a\
	 aula0606b\
	 aula0607\
	 aula0609\
	 aula0610





# Macro referente aos executaveis da aula pratica 07.

AULA07 = aula0702





# Macro referente aos executaveis da aula pratica 08.

AULA08 = aula0802





# Macro referente aos executaveis da aula pratica 09.

AULA09 = aula0902\
	 aula0903





# Macros referentes a criacao da biblioteca estatica.

LIBMATEMATICAOBJS = aula0401a.o
LIBMATEMATICA = libmatematica.a





# Macro referente aos executaveis das aulas praticas de 01 a 10.

EXECS = $(AULA01) $(AULA02) $(AULA03) $(AULA04) $(AULA05)\
	$(AULA06) $(AULA07) $(AULA08) $(AULA09)





# Macro referente a biblioteca estatica.

LIBS = $(LIBMATEMATICA)





# Macro referente aos executaveis e a biblioteca das aulas praticas de 01 a 10.

ALL = $(EXECS) $(LIBS)










# Rotulo padrao da ferramenta make (regra implicita).

.c.o:
	$(CC) $(CFLAGS) -c $<





# Rotulo referente a dependencia ALL (valor da macro ALL).

all: $(ALL)





# Rotulos referentes as dependencias (valores das macros) da aula pratica 01.

aula01: $(AULA01)

aula0101: $(AULA0101OBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0101OBJS)
	cp $@ $@-$(OS)-$(CC)

aula0102: $(AULA0102OBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0102OBJS)
	cp $@ $@-$(OS)-$(CC)

aula0103: $(AULA0103OBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0103OBJS)
	cp $@ $@-$(OS)-$(CC)

aula0104: $(AULA0104OBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0104OBJS)
	cp $@ $@-$(OS)-$(CC)

aula0105: $(AULA0105OBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0105OBJS)
	cp $@ $@-$(OS)-$(CC)

aula0106: $(AULA0106OBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0106OBJS)
	cp $@ $@-$(OS)-$(CC)

aula0107: $(AULA0107OBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0107OBJS)
	cp $@ $@-$(OS)-$(CC)

aula0108: $(AULA0108OBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0108OBJS)
	cp $@ $@-$(OS)-$(CC)





# Rotulos referentes as dependencias (valores das macros) da aula pratica 02.

aula02: $(AULA02)

aula0202a: $(AULA0202AOBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0202AOBJS)
	cp $@ $@-$(OS)-$(CC)

aula0202b: $(AULA0202BOBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0202BOBJS)
	cp $@ $@-$(OS)-$(CC)

aula0202c: $(AULA0202COBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0202COBJS)
	cp $@ $@-$(OS)-$(CC)

aula0202d: $(AULA0202DOBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0202DOBJS)
	cp $@ $@-$(OS)-$(CC)





# Rotulos referentes as dependencias (valores das macros) da aula pratica 03.

aula03: $(AULA03)

aula0302a: $(AULA0302AOBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0302AOBJS)
	cp $@ $@-$(OS)-$(CC)

aula0302b: $(AULA0302BOBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0302BOBJS)
	cp $@ $@-$(OS)-$(CC)

aula0302c: $(AULA0302COBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0302COBJS)
	cp $@ $@-$(OS)-$(CC)

aula0302d: $(AULA0302DOBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0302DOBJS)
	cp $@ $@-$(OS)-$(CC)





# Rotulos referentes as dependencias (valores das macros) da aula pratica 04.

aula04: $(AULA04)

aula0402a: $(AULA0402AOBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0402AOBJS)
	cp $@ $@-$(OS)-$(CC)

aula0402b: $(AULA0402BOBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0402BOBJS)
	cp $@ $@-$(OS)-$(CC)

aula0402c: $(AULA0402COBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0402COBJS)
	cp $@ $@-$(OS)-$(CC)

aula0402d: $(AULA0402DOBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0402DOBJS)
	cp $@ $@-$(OS)-$(CC)





# Rotulos referentes as dependencias (valores das macros) da aula pratica 05.

aula05: $(AULA05)

aula0502a: $(AULA0502AOBJS) $(LIBMATEMATICA)
	$(LD) $(LFLAGS) -o $@ $(AULA0502AOBJS) -L. -lmatematica
	cp $@ $@-$(OS)-$(CC)


aula0502b: $(AULA0502BOBJS) $(LIBMATEMATICA)
	$(LD) $(LFLAGS) -o $@ $(AULA0502BOBJS) -L. -lmatematica
	cp $@ $@-$(OS)-$(CC)

aula0502c: $(AULA0502COBJS) $(LIBMATEMATICA)
	$(LD) $(LFLAGS) -o $@ $(AULA0502COBJS) -L. -lmatematica
	cp $@ $@-$(OS)-$(CC)

aula0502d: $(AULA0502DOBJS) $(LIBMATEMATICA)
	$(LD) $(LFLAGS) -o $@ $(AULA0502DOBJS) -L. -lmatematica
	cp $@ $@-$(OS)-$(CC)

aula0502e: $(AULA0502EOBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0502EOBJS) -lm
	cp $@ $@-$(OS)-$(CC)





# Rotulos referentes as dependencias (valores das macros) da aula pratica 06.

aula06: $(AULA06)

aula0602a: $(AULA0602AOBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0602AOBJS)
	cp $@ $@-$(OS)-$(CC)

aula0602b: $(AULA0602BOBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0602BOBJS)
	cp $@ $@-$(OS)-$(CC)

aula0603a: $(AULA0603AOBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0603AOBJS)
	cp $@ $@-$(OS)-$(CC)

aula0603b: $(AULA0603BOBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0603BOBJS)
	cp $@ $@-$(OS)-$(CC)

aula0605a: $(AULA0605AOBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0605AOBJS)
	cp $@ $@-$(OS)-$(CC)

aula0605b: $(AULA0605BOBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0605BOBJS)
	cp $@ $@-$(OS)-$(CC)

aula0606a: $(AULA0606AOBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0606AOBJS)
	cp $@ $@-$(OS)-$(CC)

aula0606b: $(AULA0606BOBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0606BOBJS)
	cp $@ $@-$(OS)-$(CC)

aula0607: $(AULA0607OBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0607OBJS)
	cp $@ $@-$(OS)-$(CC)

aula0609: $(AULA0609OBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0609OBJS)
	cp $@ $@-$(OS)-$(CC)

aula0610: $(AULA0610OBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0610OBJS)
	cp $@ $@-$(OS)-$(CC)





# Rotulos referentes as dependencias (valores das macros) da aula pratica 07.

aula07: $(AULA07)

aula0702: $(AULA0702OBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0702OBJS)
	cp $@ $@-$(OS)-$(CC)





# Rotulos referentes as dependencias (valores das macros) da aula pratica 08.

aula08: $(AULA08)

aula0802: $(AULA0802OBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0802OBJS)
	cp $@ $@-$(OS)-$(CC)





# Rotulos referentes as dependencias (valores das macros) da aula pratica 09.

aula09: $(AULA09)

aula0902: $(AULA0902OBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0902OBJS)
	cp $@ $@-$(OS)-$(CC)

aula0903: $(AULA0903OBJS)
	$(LD) $(LFLAGS) -o $@ $(AULA0903OBJS)
	cp $@ $@-$(OS)-$(CC)





# Rotulos referentes as dependencias (valores das macros) da biblioteca estatica.

libmatematica.a: $(LIBMATEMATICAOBJS)
	$(AR) $(AFLAGS) $@ $(LIBMATEMATICAOBJS)





# Rotulo referente a exclusao de todos os codigos-objeto e executaveis gerados, exceto os executaveis
# que indicam a combinacao entre sistema operacional e compilador/link-editor.


clean:
	rm -f *.o $(ALL)





# Rotulo referente a exclusao de todos os codigos-objeto e executaveis gerados.

clean-all:
	rm -f *.o $(ALL) *-FreeBSD-* *-Linux-*





# Rotulo referente a exclusao de todos os codigos-objeto e executaveis gerados no FreeBSD.

clean-freebsd:
	rm -f *.o *-FreeBSD-*





# Rotulo referente a exclusao de todos os codigos-objeto e executaveis gerados no Linux.

clean-linux:
	rm -f *.o *-Linux-*










# $RCSfile: GNUmakefile,v $
