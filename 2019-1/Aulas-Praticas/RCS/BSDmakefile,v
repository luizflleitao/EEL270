head	1.24;
access;
symbols;
locks
	luiz.leitao:1.24; strict;
comment	@# @;


1.24
date	2019.04.24.07.42.38;	author luiz.leitao;	state Exp;
branches;
next	1.23;

1.23
date	2019.04.24.07.25.52;	author luiz.leitao;	state Exp;
branches;
next	1.22;

1.22
date	2019.04.24.07.11.06;	author luiz.leitao;	state Exp;
branches;
next	1.21;

1.21
date	2019.04.24.06.57.10;	author luiz.leitao;	state Exp;
branches;
next	1.20;

1.20
date	2019.04.24.06.43.49;	author luiz.leitao;	state Exp;
branches;
next	1.19;

1.19
date	2019.04.19.02.41.01;	author luiz.leitao;	state Exp;
branches;
next	1.18;

1.18
date	2019.04.19.02.29.24;	author luiz.leitao;	state Exp;
branches;
next	1.17;

1.17
date	2019.04.19.02.16.44;	author luiz.leitao;	state Exp;
branches;
next	1.16;

1.16
date	2019.04.16.14.23.11;	author luiz.leitao;	state Exp;
branches;
next	1.15;

1.15
date	2019.04.10.16.52.31;	author luiz.leitao;	state Exp;
branches;
next	1.14;

1.14
date	2019.04.10.16.33.10;	author luiz.leitao;	state Exp;
branches;
next	1.13;

1.13
date	2019.04.10.16.16.15;	author luiz.leitao;	state Exp;
branches;
next	1.12;

1.12
date	2019.04.10.16.04.35;	author luiz.leitao;	state Exp;
branches;
next	1.11;

1.11
date	2019.04.05.02.45.01;	author luiz.leitao;	state Exp;
branches;
next	1.10;

1.10
date	2019.04.05.02.33.00;	author luiz.leitao;	state Exp;
branches;
next	1.9;

1.9
date	2019.04.05.02.18.39;	author luiz.leitao;	state Exp;
branches;
next	1.8;

1.8
date	2019.04.05.01.59.04;	author luiz.leitao;	state Exp;
branches;
next	1.7;

1.7
date	2019.03.29.06.31.55;	author luiz.leitao;	state Exp;
branches;
next	1.6;

1.6
date	2019.03.29.06.20.24;	author luiz.leitao;	state Exp;
branches;
next	1.5;

1.5
date	2019.03.29.06.11.26;	author luiz.leitao;	state Exp;
branches;
next	1.4;

1.4
date	2019.03.29.05.57.20;	author luiz.leitao;	state Exp;
branches;
next	1.3;

1.3
date	2019.03.29.05.45.09;	author luiz.leitao;	state Exp;
branches;
next	1.2;

1.2
date	2019.03.29.05.29.18;	author luiz.leitao;	state Exp;
branches;
next	1.1;

1.1
date	2019.03.29.05.17.10;	author luiz.leitao;	state Exp;
branches;
next	;


desc
@Inclusao dos tipos basicos da linguagem C.
@


1.24
log
@Implementacao da funcao CalcularSerieHarmonicaAlternada utilizando recursividade e a funcao pow.
@
text
@#
# Universidade Federal do Rio de Janeiro
# Escola Politecnica
# Departamento de Eletronica e de Computacao
# EEL270 - Computacao II - Turma 2019/1
# Prof. Marcelo Luiz Drumond Lanza
# Autor: Luiz Fernando Loureiro Leitao
#
# $Author: luiz.leitao $
# $Date: 2019/04/24 07:25:52 $
# $Log: BSDmakefile,v $
# Revision 1.23  2019/04/24 07:25:52  luiz.leitao
# Implementacao da funcao CalcularSerieHarmonicaAlternada utilizando o laco de repeticao while e a funcao CalcularExponencial.
#
# Revision 1.22  2019/04/24 07:11:06  luiz.leitao
# Implementacao da funcao CalcularSerieHarmonicaAlternada utilizando o laco de repeticao for e a funcao CalcularExponencial.
#
# Revision 1.21  2019/04/24 06:57:10  luiz.leitao
# Implementacao da funcao CalcularSerieHarmonicaAlternada utilizando o laco de repeticao do ... while e a funcao CalcularExponencial.
#
# Revision 1.20  2019/04/24 06:43:49  luiz.leitao
# Implementacao da funcao CalcularSerieHarminicaAlternada utilizando recursividade e a funcao CalcularExponencial.
#
# Revision 1.19  2019/04/19 02:41:01  luiz.leitao
# Implementacao da funcao CalcularExponencial utilizando o laco de repeticao while.
#
# Revision 1.18  2019/04/19 02:29:24  luiz.leitao
# Implementacao da funcao CalcularExponencial utilizando o laco de repeticao for.
#
# Revision 1.17  2019/04/19 02:16:44  luiz.leitao
# Implementacao da funcao CalcularExponencial utilizando o laco de repeticao do ... while.
#
# Revision 1.16  2019/04/16 14:23:11  luiz.leitao
# Implementacao da funcao CalcularExponencial utilizando recursividade.
#
# Revision 1.15  2019/04/10 16:52:31  luiz.leitao
# Implementacao da funcao CalcularMaximoDivisorComum utilizando o laco de repeticao while.
#
# Revision 1.14  2019/04/10 16:33:10  luiz.leitao
# Implementacao da funcao CalcularMaximoDivisorComum utilizando o laco de repeticao for.
#
# Revision 1.13  2019/04/10 16:16:15  luiz.leitao
# Implementacao da funcao CalcularMaximoDivisorComum utilizando o laco de repeticao do ... while.
#
# Revision 1.12  2019/04/10 16:04:35  luiz.leitao
# Implementacao da funcao CalcularMaximoDivisorComum utilizando recursividade.
#
# Revision 1.11  2019/04/05 02:45:01  luiz.leitao
# Implementacao da Serie de Fibonacci utilizando o laco de repeticao while.
#
# Revision 1.10  2019/04/05 02:33:00  luiz.leitao
# Implementacao da Serie de Fibonacci utilizando o laco de repeticao for.
#
# Revision 1.9  2019/04/05 02:18:39  luiz.leitao
# Implementacao da Serie de Fibonacci utilizando o laco de repeticao do ... while.
#
# Revision 1.8  2019/04/05 01:59:04  luiz.leitao
# Implementacao da Serie de Fibonacci utilizando recursividade.
#
# Revision 1.7  2019/03/29 06:31:55  luiz.leitao
# Inclusao dos tipos basicos combinados com os modificadores de sinal e com os modificadores de largura da linguagem C.
#
# Revision 1.6  2019/03/29 06:20:24  luiz.leitao
# Inclusao dos tipos basicos combinados com os modificadores de largura da linguagem C.
#
# Revision 1.5  2019/03/29 06:11:26  luiz.leitao
# Inclusao dos tipos basicos combinados com modificadores de sinal da linguagem C.
#
# Revision 1.4  2019/03/29 05:57:20  luiz.leitao
# Inclusao dos modificadores de sinal combinados com os modificadores de largura da linguagem C.
#
# Revision 1.3  2019/03/29 05:45:09  luiz.leitao
# Inclusao dos modificadores de largura da linguagem C.
#
# Revision 1.2  2019/03/29 05:29:18  luiz.leitao
# Inclusao dos modificadores de sinal da linguagem C.
#
# Revision 1.1  2019/03/29 05:17:10  luiz.leitao
# Initial revision
#










# Macro referente ao nome do sistema operacional utilizado.

OS = `uname -s`





# Declaracoes condicionais referentes a compilacao e a link-edicao (gcc ou clang).

.ifdef GCC
CC = gcc
LD = gcc
.elif CLANG
CC = clang
LD = clang
.else
CC = gcc
LD = gcc
.endif





# Macros referentes aos argumentos passados tanto na compilacao quanto na link-edicao.

CFLAGS = -Wall -std=c99
LFLAGS = -Wall -std=c99





# Macro referente ao comando da criacao da biblioteca estatica.

AR = ar





# Macros referentes aos codigos-objeto da aula pratica 01.

AULA0101OBJS = aula0101.o
AULA0102OBJS = aula0102.o
AULA0103OBJS = aula0103.o
AULA0104OBJS = aula0104.o
AULA0105OBJS = aula0105.o
AULA0106OBJS = aula0106.o
AULA0107OBJS = aula0107.o





# Macros referentes aos codigos-objeto da aula pratica 02.

AULA0202AOBJS = aula0201a.o aula0202.o
AULA0202BOBJS = aula0201b.o aula0202.o
AULA0202COBJS = aula0201c.o aula0202.o
AULA0202DOBJS = aula0201d.o aula0202.o





# Macros referentes aos codigos-objeto da aula pratica 03.

AULA0302AOBJS = aula0301a.o aula0302.o
AULA0302BOBJS = aula0301b.o aula0302.o
AULA0302COBJS = aula0301c.o aula0302.o
AULA0302DOBJS = aula0301d.o aula0302.o





# Macros referentes aos codigos-objeto da aula pratica 04.

AULA0402AOBJS = aula0401a.o aula0402.o
AULA0402BOBJS = aula0401b.o aula0402.o
AULA0402COBJS = aula0401c.o aula0402.o
AULA0402DOBJS = aula0401d.o aula0402.o





# Macros referentes aos codigos-objeto da aula pratica 05.

AULA0502AOBJS = aula0501a.o aula0502.o
AULA0502BOBJS = aula0501b.o aula0502.o
AULA0502COBJS = aula0501c.o aula0502.o
AULA0502DOBJS = aula0501d.o aula0502.o
AULA0502EOBJS = aula0501e.o aula0502.o





# Macros referentes a criacao da biblioteca estatica.

LIBMATEMATICAOBJS = aula0401a.o
LIBMATEMATICA = libmatematica.a





# Macro referente aos executaveis da aula pratica 01.

AULA01 = aula0101\
	 aula0102\
	 aula0103\
	 aula0104\
	 aula0105\
	 aula0106\
	 aula0107





# Macro referente aos executaveis da aula pratica 02.

AULA02 = aula0202a\
	 aula0202b\
	 aula0202c\
	 aula0202d





# Macro referente aos executaveis da aula pratica 03.

AULA03 = aula0302a\
	 aula0302b\
	 aula0302c\
	 aula0302d





# Macro referente aos executaveis da aula pratica 04.

AULA04 = aula0402a\
	 aula0402b\
	 aula0402c\
	 aula0402d





# Macro referente aos executaveis da aula pratica 05.

AULA05 = aula0502a\
	 aula0502b\
	 aula0502c\
	 aula0502d\
	 aula0502e





# Macro referente aos executaveis das aulas praticas de 01 a 10.

EXECS = $(AULA01) $(AULA02) $(AULA03) $(AULA04) $(AULA05)





# Macro referente as bibliotecas estaticas.

LIBS = $(LIBMATEMATICA)





# Macro referente aos executaveis e as bibliotecas das aulas praticas de 01 a 10.

ALL = $(EXECS) $(LIBS)










# Rotulo padrao da ferramenta make (regra implicita).

.c.o:
	$(CC) $(CFLAGS) -c $<





# Rotulo referente a dependencia ALL (valor da macro ALL).

all: $(ALL)





# Rotulos referentes as dependencias (valores das macros) da aula pratica 01.

aula01: $(AULA01)

aula0101: $(AULA0101OBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0101OBJS)
	cp $@@ $@@-$(OS)-$(CC)

aula0102: $(AULA0102OBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0102OBJS)
	cp $@@ $@@-$(OS)-$(CC)

aula0103: $(AULA0103OBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0103OBJS)
	cp $@@ $@@-$(OS)-$(CC)

aula0104: $(AULA0104OBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0104OBJS)
	cp $@@ $@@-$(OS)-$(CC)

aula0105: $(AULA0105OBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0105OBJS)
	cp $@@ $@@-$(OS)-$(CC)

aula0106: $(AULA0106OBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0106OBJS)
	cp $@@ $@@-$(OS)-$(CC)

aula0107: $(AULA0107OBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0107OBJS)
	cp $@@ $@@-$(OS)-$(CC)





# Rotulos referentes as dependencias (valores das macros) da aula pratica 02.

aula02: $(AULA02)

aula0202a: $(AULA0202AOBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0202AOBJS)
	cp $@@ $@@-$(OS)-$(CC)

aula0202b: $(AULA0202BOBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0202BOBJS)
	cp $@@ $@@-$(OS)-$(CC)

aula0202c: $(AULA0202COBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0202COBJS)
	cp $@@ $@@-$(OS)-$(CC)

aula0202d: $(AULA0202DOBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0202DOBJS)
	cp $@@ $@@-$(OS)-$(CC)





# Rotulos referentes as dependencias (valores das macros) da aula pratica 03.

aula03: $(AULA03)

aula0302a: $(AULA0302AOBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0302AOBJS)
	cp $@@ $@@-$(OS)-$(CC)

aula0302b: $(AULA0302BOBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0302BOBJS)
	cp $@@ $@@-$(OS)-$(CC)

aula0302c: $(AULA0302COBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0302COBJS)
	cp $@@ $@@-$(OS)-$(CC)

aula0302d: $(AULA0302DOBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0302DOBJS)
	cp $@@ $@@-$(OS)-$(CC)





# Rotulos referentes as dependencias (valores das macros) da aula pratica 04.

aula04: $(AULA04)

aula0402a: $(AULA0402AOBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0402AOBJS)
	cp $@@ $@@-$(OS)-$(CC)

aula0402b: $(AULA0402BOBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0402BOBJS)
	cp $@@ $@@-$(OS)-$(CC)

aula0402c: $(AULA0402COBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0402COBJS)
	cp $@@ $@@-$(OS)-$(CC)

aula0402d: $(AULA0402DOBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0402DOBJS)
	cp $@@ $@@-$(OS)-$(CC)





# Rotulos referentes as dependencias (valores das macros) da aula pratica 05.

aula05: $(AULA05)

aula0502a: $(AULA0502AOBJS) $(LIBMATEMATICA)
	$(LD) $(LFLAGS) -o $@@ $(AULA0502AOBJS) -L. -lmatematica
	cp $@@ $@@-$(OS)-$(CC)

aula0502b: $(AULA0502BOBJS) $(LIBMATEMATICA)
	$(LD) $(LFLAGS) -o $@@ $(AULA0502BOBJS) -L. -lmatematica
	cp $@@ $@@-$(OS)-$(CC)

aula0502c: $(AULA0502COBJS) $(LIBMATEMATICA)
	$(LD) $(LFLAGS) -o $@@ $(AULA0502COBJS) -L. -lmatematica
	cp $@@ $@@-$(OS)-$(CC)

aula0502d: $(AULA0502DOBJS) $(LIBMATEMATICA)
	$(LD) $(LFLAGS) -o $@@ $(AULA0502DOBJS) -L. -lmatematica
	cp $@@ $@@-$(OS)-$(CC)

aula0502e: $(AULA0502EOBJS) $(LIBMATEMATICA)
	$(LD) $(LFLAGS) -o $@@ $(AULA0502EOBJS) -L. -lm
	cp $@@ $@@-$(OS)-$(CC)





# Rotulos referentes as dependencias (valores das macros) da biblioteca estatica.

libmatematica.a: $(LIBMATEMATICAOBJS)
	$(AR) -r $@@ $(LIBMATEMATICAOBJS)





# Rotulo referente a exclusao de todos os codigos-objeto e executaveis gerados, exceto os executaveis
# que indicam a combinacao entre sistema operacional e compilador/link-editor.

clean:
	rm -f *.o $(ALL)





# Rotulo referente a exclusao de todos os codigos-objeto e executaveis gerados.

clean-all:
	rm -f *.o $(ALL) *-FreeBSD-* *-Linux-*





# Rotulo referente a exclusao de todos os codigos-objeto e executaveis gerados no FreeBSD.

clean-freebsd:
	rm -f *.o *-FreeBSD-*





# Rotulo referente a exclusao de todos os codigos-objeto e executaveis gerados no Linux.

clean-linux:
	rm -f *.o *-Linux-*










# $RCSfile: BSDmakefile,v $
@


1.23
log
@Implementacao da funcao CalcularSerieHarmonicaAlternada utilizando o laco de repeticao while e a funcao CalcularExponencial.
@
text
@d10 1
a10 1
# $Date: 2019/04/24 07:11:06 $
d12 3
d186 1
d253 2
a254 1
	 aula0502d
d432 4
@


1.22
log
@Implementacao da funcao CalcularSerieHarmonicaAlternada utilizando o laco de repeticao for e a funcao CalcularExponencial.
@
text
@d10 1
a10 1
# $Date: 2019/04/24 06:57:10 $
d12 3
d182 1
d248 2
a249 1
	 aula0502c
d423 4
@


1.21
log
@Implementacao da funcao CalcularSerieHarmonicaAlternada utilizando o laco de repeticao do ... while e a funcao CalcularExponencial.
@
text
@d10 1
a10 1
# $Date: 2019/04/24 06:43:49 $
d12 3
d178 1
d243 2
a244 1
	 aula0502b
d414 4
@


1.20
log
@Implementacao da funcao CalcularSerieHarminicaAlternada utilizando recursividade e a funcao CalcularExponencial.
@
text
@d10 1
a10 1
# $Date: 2019/04/19 02:41:01 $
d12 3
d174 1
d238 2
a239 1
AULA05 = aula0502a
d405 4
@


1.19
log
@Implementacao da funcao CalcularExponencial utilizando o laco de repeticao while.
@
text
@d10 1
a10 1
# $Date: 2019/04/19 02:29:24 $
d12 3
a105 1

d113 8
d168 17
d232 8
d242 9
a250 1
EXECS = $(AULA01) $(AULA02) $(AULA03) $(AULA04)
d258 1
a258 1
ALL = $(EXECS)
d389 21
@


1.18
log
@Implementacao da funcao CalcularExponencial utilizando o laco de repeticao for.
@
text
@d10 1
a10 1
# $Date: 2019/04/19 02:16:44 $
d12 3
d152 1
d198 2
a199 1
	 aula0402c
d341 4
@


1.17
log
@Implementacao da funcao CalcularExponencial utilizando o laco de repeticao do ... while.
@
text
@d10 1
a10 1
# $Date: 2019/04/16 14:23:11 $
d12 3
d148 1
d193 2
a194 1
	 aula0402b
d332 4
@


1.16
log
@Implementacao da funcao CalcularExponencial utilizando recursividade.
@
text
@d10 1
a10 1
# $Date: 2019/04/10 16:52:31 $
d12 3
d144 1
d188 2
a189 1
AULA04 = aula0402a
d323 4
@


1.15
log
@Implementacao da funcao CalcularMaximoDivisorComum utilizando o laco de repeticao while.
@
text
@d10 1
a10 1
# $Date: 2019/04/10 16:33:10 $
d12 3
d138 8
d182 8
d192 1
a192 1
EXECS = $(AULA01) $(AULA02) $(AULA03)
d306 12
@


1.14
log
@Implementacao da funcao CalcularMaximoDivisorComum utilizando o laco de repeticao for.
@
text
@d10 1
a10 1
# $Date: 2019/04/10 16:16:15 $
d12 3
d129 1
d164 2
a165 1
	 aula0302c
d283 4
@


1.13
log
@Implementacao da funcao CalcularMaximoDivisorComum utilizando o laco de repeticao do ... while.
@
text
@d10 1
a10 1
# $Date: 2019/04/10 16:04:35 $
d12 3
d125 1
d159 2
a160 1
	 aula0302b
d274 4
@


1.12
log
@Implementacao da funcao CalcularMaximoDivisorComum utilizando recursividade.
@
text
@d10 1
a10 1
# $Date: 2019/04/05 02:45:01 $
d12 3
d121 1
d154 2
a155 1
AULA03 = aula0302a
d265 4
@


1.11
log
@Implementacao da Serie de Fibonacci utilizando o laco de repeticao while.
@
text
@d10 1
a10 1
# $Date: 2019/04/05 02:33:00 $
d12 3
d115 8
d148 8
d158 1
a158 1
EXECS = $(AULA01) $(AULA02)
d248 12
@


1.10
log
@Implementacao da Serie de Fibonacci utilizando o laco de repeticao for.
@
text
@d10 1
a10 1
# $Date: 2019/04/05 02:18:39 $
d12 3
d106 1
d130 2
a131 1
	 aula0202c
d225 4
@


1.9
log
@Implementacao da Serie de Fibonacci utilizando o laco de repeticao do ... while.
@
text
@d10 1
a10 1
# $Date: 2019/04/05 01:59:04 $
d12 3
d102 1
d125 2
a126 1
	 aula0202b
d216 4
@


1.8
log
@Implementacao da Serie de Fibonacci utilizando recursividade.
@
text
@d10 1
a10 1
# $Date: 2019/03/29 06:31:55 $
d12 3
d98 1
d120 2
a121 1
AULA02 = aula0202a
d207 4
@


1.7
log
@Inclusao dos tipos basicos combinados com os modificadores de sinal e com os modificadores de largura da linguagem C.
@
text
@d10 1
a10 1
# $Date: 2019/03/29 06:20:24 $
d12 3
d92 8
d114 8
d124 1
a124 1
EXECS = $(AULA01) 
d190 12
@


1.6
log
@Inclusao dos tipos basicos combinados com os modificadores de largura da linguagem C.
@
text
@d10 1
a10 1
# $Date: 2019/03/29 06:11:26 $
d12 3
d83 1
d96 2
a97 1
	 aula0106
d167 4
@


1.5
log
@Inclusao dos tipos basicos combinados com modificadores de sinal da linguagem C.
@
text
@d10 1
a10 1
# $Date: 2019/03/29 05:57:20 $
d12 3
d79 1
d91 2
a92 1
	 aula0105
d158 4
@


1.4
log
@Inclusao dos modificadores de sinal combinados com os modificadores de largura da linguagem C.
@
text
@d10 1
a10 1
# $Date: 2019/03/29 05:45:09 $
d12 3
d75 1
d86 2
a87 1
	 aula0104
d149 4
@


1.3
log
@Inclusao dos modificadores de largura da linguagem C.
@
text
@d10 1
a10 1
# $Date: 2019/03/29 05:29:18 $
d12 3
d71 1
d81 2
a82 1
	 aula0103
d140 4
@


1.2
log
@Inclusao dos modificadores de sinal da linguagem C.
@
text
@d10 1
a10 1
# $Date: 2019/03/29 05:17:10 $
d12 3
d67 1
d76 2
a77 1
	 aula0102
d131 4
@


1.1
log
@Initial revision
@
text
@d9 6
a14 3
# $Author$
# $Date$
# $Log$
d63 1
d71 2
a72 1
AULA01 = aula0101
d124 4
d174 1
a174 1
# $RCSfile$
@
