head	1.24;
access;
symbols;
locks
	luiz.leitao:1.24; strict;
comment	@# @;


1.24
date	2019.04.24.07.41.59;	author luiz.leitao;	state Exp;
branches;
next	1.23;

1.23
date	2019.04.24.07.25.06;	author luiz.leitao;	state Exp;
branches;
next	1.22;

1.22
date	2019.04.24.07.10.18;	author luiz.leitao;	state Exp;
branches;
next	1.21;

1.21
date	2019.04.24.06.56.09;	author luiz.leitao;	state Exp;
branches;
next	1.20;

1.20
date	2019.04.24.06.42.46;	author luiz.leitao;	state Exp;
branches;
next	1.19;

1.19
date	2019.04.19.02.40.36;	author luiz.leitao;	state Exp;
branches;
next	1.18;

1.18
date	2019.04.19.02.28.58;	author luiz.leitao;	state Exp;
branches;
next	1.17;

1.17
date	2019.04.19.02.16.16;	author luiz.leitao;	state Exp;
branches;
next	1.16;

1.16
date	2019.04.16.14.22.31;	author luiz.leitao;	state Exp;
branches;
next	1.15;

1.15
date	2019.04.10.16.51.54;	author luiz.leitao;	state Exp;
branches;
next	1.14;

1.14
date	2019.04.10.16.32.41;	author luiz.leitao;	state Exp;
branches;
next	1.13;

1.13
date	2019.04.10.16.15.27;	author luiz.leitao;	state Exp;
branches;
next	1.12;

1.12
date	2019.04.10.16.03.52;	author luiz.leitao;	state Exp;
branches;
next	1.11;

1.11
date	2019.04.05.02.44.32;	author luiz.leitao;	state Exp;
branches;
next	1.10;

1.10
date	2019.04.05.02.32.32;	author luiz.leitao;	state Exp;
branches;
next	1.9;

1.9
date	2019.04.05.02.18.09;	author luiz.leitao;	state Exp;
branches;
next	1.8;

1.8
date	2019.04.05.01.58.27;	author luiz.leitao;	state Exp;
branches;
next	1.7;

1.7
date	2019.03.29.06.30.56;	author luiz.leitao;	state Exp;
branches;
next	1.6;

1.6
date	2019.03.29.06.19.54;	author luiz.leitao;	state Exp;
branches;
next	1.5;

1.5
date	2019.03.29.06.10.58;	author luiz.leitao;	state Exp;
branches;
next	1.4;

1.4
date	2019.03.29.05.56.48;	author luiz.leitao;	state Exp;
branches;
next	1.3;

1.3
date	2019.03.29.05.44.48;	author luiz.leitao;	state Exp;
branches;
next	1.2;

1.2
date	2019.03.29.05.28.55;	author luiz.leitao;	state Exp;
branches;
next	1.1;

1.1
date	2019.03.29.05.16.54;	author luiz.leitao;	state Exp;
branches;
next	;


desc
@Inclusao dos tipos basicos da linguagem C.
@


1.24
log
@Implementacao da funcao CalcularSerieHarmonicaAlternada utilizando recursividade e a funcao pow.
@
text
@#
# Universidade Federal do Rio de Janeiro
# Escola Politecnica
# Departamento de Eletronica e de Computacao
# EEL270 - Computacao II - Turma 2019/1
# Prof. Marcelo Luiz Drumond Lanza
# Autor: Luiz Fernando Loureiro Leitao
#
# $Author: luiz.leitao $
# $Date: 2019/04/24 07:25:06 $
# $Log: GNUmakefile,v $
# Revision 1.23  2019/04/24 07:25:06  luiz.leitao
# Implementacao da funcao CalcularSerieHarmonicaAlternada utilizando o laco de repeticao while e a funcao CalcularExponencial.
#
# Revision 1.22  2019/04/24 07:10:18  luiz.leitao
# Implementacao da funcao CalcularSerieHarmonicaAlternada utilizando o laco de repeticao for e a funcao CalcularExponencial.
#
# Revision 1.21  2019/04/24 06:56:09  luiz.leitao
# Implementacao da funcao CalcularSerieHarmonicaAlternada utilizando o laco de repeticao do ... while e a funcao CalcularExponencial.
#
# Revision 1.20  2019/04/24 06:42:46  luiz.leitao
# Implementacao da funcao CalcularSerieHarmonicaAlternada utilizando recursividade e a funcao CalcularExponencial.
#
# Revision 1.19  2019/04/19 02:40:36  luiz.leitao
# Implementacao da funcao CalcularExponencial utilizando o laco de repeticao while.
#
# Revision 1.18  2019/04/19 02:28:58  luiz.leitao
# Implementacao da funcao CalcularExponencial utilizando o laco de repeticao for.
#
# Revision 1.17  2019/04/19 02:16:16  luiz.leitao
# Implementacao da funcao CalcularExponencial utilizando o laco de repeticao do ... while.
#
# Revision 1.16  2019/04/16 14:22:31  luiz.leitao
# Implementacao da funcao CalcularExponencial utilizando recursividade.
#
# Revision 1.15  2019/04/10 16:51:54  luiz.leitao
# Implementacao da funcao CalcularMaximoDivisorComum utilizando o laco de repeticao while.
#
# Revision 1.14  2019/04/10 16:32:41  luiz.leitao
# Implementacao da funcao CalcularMaximoDivisorComum utilizando o laco de repeticao for.
#
# Revision 1.13  2019/04/10 16:15:27  luiz.leitao
# Implementacao da funcao CalcularMaximoDivisorComum utilizando o laco de repeticao do ... while.
#
# Revision 1.12  2019/04/10 16:03:52  luiz.leitao
# Implementacao da funcao CalcularMaximoDivisorComum utilizando recursividade.
#
# Revision 1.11  2019/04/05 02:44:32  luiz.leitao
# Implementacao da Serie de Fibonacci utilizando o laco de repeticao while.
#
# Revision 1.10  2019/04/05 02:32:32  luiz.leitao
# Implementacao da Serie de Fibonacci utilizando o laco de repeticao for.
#
# Revision 1.9  2019/04/05 02:18:09  luiz.leitao
# Implementacao da Serie de Fibonacci utilizando o laco de repeticao do ... while.
#
# Revision 1.8  2019/04/05 01:58:27  luiz.leitao
# Implementacao da Serie de Fibonacci utilizando recursividade.
#
# Revision 1.7  2019/03/29 06:30:56  luiz.leitao
# Inclusao dos tipos basicos combinados com os modificadores de sinal e com os modificadores de largura da linguagem C.
#
# Revision 1.6  2019/03/29 06:19:54  luiz.leitao
# Inclusao dos tipos basicos combinados com os modificadores de largura da linguagem C.
#
# Revision 1.5  2019/03/29 06:10:58  luiz.leitao
# Inclusao dos tipos basicos combinados com modificadores de sinal da linguagem C.
#
# Revision 1.4  2019/03/29 05:56:48  luiz.leitao
# Inclusao dos modificadores de sinal combinados com os modificadores de largura da linguagem C.
#
# Revision 1.3  2019/03/29 05:44:48  luiz.leitao
# Inclusao dos modificadores de largura da linguagem C.
#
# Revision 1.2  2019/03/29 05:28:55  luiz.leitao
# Inclusao dos modificadores de sinal da linguagem C.
#
# Revision 1.1  2019/03/29 05:16:54  luiz.leitao
# Initial revision
#










# Macro referente ao nome do sistema operacional utilizado.

OS = $(shell uname -s)





# Macros referentes a compilacao e a link-edicao (gcc como programa padrao).

CC = gcc
LD = gcc





# Declaracao condicional usada quando ha a escolha explicita pelo gcc (make cc=GCC).

ifeq ($(cc), GCC)
CC = gcc
LD = gcc
endif





# Declaracao condicional usada quando ha a escolha explicita pelo clang (make cc=CLANG).

ifeq ($(cc), CLANG)
CC = clang
LD = clang
endif





# Macros referentes aos argumentos passados tanto na compilacao quanto na link-edicao.

CFLAGS = -Wall -std=c99
LFLAGS = -Wall -std=c99





# Macro referente ao comando da criacao da biblioteca estatica.

AR = ar





# Macros referentes aos codigos-objeto da aula pratica 01.

AULA0101OBJS = aula0101.o
AULA0102OBJS = aula0102.o
AULA0103OBJS = aula0103.o
AULA0104OBJS = aula0104.o
AULA0105OBJS = aula0105.o
AULA0106OBJS = aula0106.o
AULA0107OBJS = aula0107.o





# Macros referentes aos codigos-objeto da aula pratica 02.

AULA0202AOBJS = aula0201a.o aula0202.o
AULA0202BOBJS = aula0201b.o aula0202.o
AULA0202COBJS = aula0201c.o aula0202.o
AULA0202DOBJS = aula0201d.o aula0202.o





# Macros referentes aos codigos-objeto da aula pratica 03.

AULA0302AOBJS = aula0301a.o aula0302.o
AULA0302BOBJS = aula0301b.o aula0302.o
AULA0302COBJS = aula0301c.o aula0302.o
AULA0302DOBJS = aula0301d.o aula0302.o





# Macros referentes aos codigos-objeto da aula pratica 04.

AULA0402AOBJS = aula0401a.o aula0402.o
AULA0402BOBJS = aula0401b.o aula0402.o
AULA0402COBJS = aula0401c.o aula0402.o
AULA0402DOBJS = aula0401d.o aula0402.o





# Macros referentes aos codigos-objeto da aula pratica 05.

AULA0502AOBJS = aula0501a.o aula0502.o
AULA0502BOBJS = aula0501b.o aula0502.o
AULA0502COBJS = aula0501c.o aula0502.o
AULA0502DOBJS = aula0501d.o aula0502.o
AULA0502EOBJS = aula0501e.o aula0502.o





# Macros referentes a criacao da biblioteca estatica.

LIBMATEMATICAOBJS = aula0401a.o
LIBMATEMATICA = libmatematica.a





# Macro referente aos executaveis da aula pratica 01.

AULA01 = aula0101\
	 aula0102\
	 aula0103\
	 aula0104\
	 aula0105\
	 aula0106\
	 aula0107





# Macro referente aos executaveis da aula pratica 02.

AULA02 = aula0202a\
	 aula0202b\
	 aula0202c\
	 aula0202d





# Macro referente aos executaveis da aula pratica 03.

AULA03 = aula0302a\
	 aula0302b\
	 aula0302c\
	 aula0302d





# Macro referente aos executaveis da aula pratica 04.

AULA04 = aula0402a\
	 aula0402b\
	 aula0402c\
	 aula0402d





# Macro referente aos executaveis da aula pratica 05.

AULA05 = aula0502a\
	 aula0502b\
	 aula0502c\
	 aula0502d\
	 aula0502e





# Macro referente aos executaveis das aulas praticas de 01 a 10.

EXECS = $(AULA01) $(AULA02) $(AULA03) $(AULA04) $(AULA05)





# Macro referente as bibliotecas estaticas.

LIBS = $(LIBMATEMATICA)





# Macro referente aos executaveis e as bibliotecas das aulas praticas de 01 a 10.

ALL = $(EXECS) $(LIBS)










# Rotulo padrao da ferramenta make (regra implicita).

.c.o:
	$(CC) $(CFLAGS) -c $<





# Rotulo referente a dependencia ALL (valor da macro ALL).

all: $(ALL)





# Rotulos referentes as dependencias (valores das macros) da aula pratica 01.

aula01: $(AULA01)

aula0101: $(AULA0101OBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0101OBJS)
	cp $@@ $@@-$(OS)-$(CC)

aula0102: $(AULA0102OBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0102OBJS)
	cp $@@ $@@-$(OS)-$(CC)

aula0103: $(AULA0103OBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0103OBJS)
	cp $@@ $@@-$(OS)-$(CC)

aula0104: $(AULA0104OBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0104OBJS)
	cp $@@ $@@-$(OS)-$(CC)

aula0105: $(AULA0105OBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0105OBJS)
	cp $@@ $@@-$(OS)-$(CC)

aula0106: $(AULA0106OBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0106OBJS)
	cp $@@ $@@-$(OS)-$(CC)

aula0107: $(AULA0107OBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0107OBJS)
	cp $@@ $@@-$(OS)-$(CC)





# Rotulos referentes as dependencias (valores das macros) da aula pratica 02.

aula02: $(AULA02)

aula0202a: $(AULA0202AOBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0202AOBJS)
	cp $@@ $@@-$(OS)-$(CC)

aula0202b: $(AULA0202BOBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0202BOBJS)
	cp $@@ $@@-$(OS)-$(CC)

aula0202c: $(AULA0202COBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0202COBJS)
	cp $@@ $@@-$(OS)-$(CC)

aula0202d: $(AULA0202DOBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0202DOBJS)
	cp $@@ $@@-$(OS)-$(CC)





# Rotulos referentes as dependencias (valores das macros) da aula pratica 03.

aula03: $(AULA03)

aula0302a: $(AULA0302AOBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0302AOBJS)
	cp $@@ $@@-$(OS)-$(CC)

aula0302b: $(AULA0302BOBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0302BOBJS)
	cp $@@ $@@-$(OS)-$(CC)

aula0302c: $(AULA0302COBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0302COBJS)
	cp $@@ $@@-$(OS)-$(CC)

aula0302d: $(AULA0302DOBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0302DOBJS)
	cp $@@ $@@-$(OS)-$(CC)





# Rotulos referentes as dependencias (valores das macros) da aula pratica 04.

aula04: $(AULA04)

aula0402a: $(AULA0402AOBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0402AOBJS)
	cp $@@ $@@-$(OS)-$(CC)

aula0402b: $(AULA0402BOBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0402BOBJS)
	cp $@@ $@@-$(OS)-$(CC)

aula0402c: $(AULA0402COBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0402COBJS)
	cp $@@ $@@-$(OS)-$(CC)

aula0402d: $(AULA0402DOBJS)
	$(LD) $(LFLAGS) -o $@@ $(AULA0402DOBJS)
	cp $@@ $@@-$(OS)-$(CC)





# Rotulos referentes as dependencias (valores das macros) da aula pratica 05.

aula05: $(AULA05)

aula0502a: $(AULA0502AOBJS) $(LIBMATEMATICA)
	$(LD) $(LFLAGS) -o $@@ $(AULA0502AOBJS) -L. -lmatematica
	cp $@@ $@@-$(OS)-$(CC)

aula0502b: $(AULA0502BOBJS) $(LIBMATEMATICA)
	$(LD) $(LFLAGS) -o $@@ $(AULA0502BOBJS) -L. -lmatematica
	cp $@@ $@@-$(OS)-$(CC)

aula0502c: $(AULA0502COBJS) $(LIBMATEMATICA)
	$(LD) $(LFLAGS) -o $@@ $(AULA0502COBJS) -L. -lmatematica
	cp $@@ $@@-$(OS)-$(CC)

aula0502d: $(AULA0502DOBJS) $(LIBMATEMATICA)
	$(LD) $(LFLAGS) -o $@@ $(AULA0502DOBJS) -L. -lmatematica
	cp $@@ $@@-$(OS)-$(CC)

aula0502e: $(AULA0502EOBJS) $(LIBMATEMATICA)
	$(LD) $(LFLAGS) -o $@@ $(AULA0502EOBJS) -L. -lm
	cp $@@ $@@-$(OS)-$(CC)





# Rotulos referentes as dependencias (valores das macros) da biblioteca estatica.

libmatematica.a: $(LIBMATEMATICAOBJS)
	$(AR) -r $@@ $(LIBMATEMATICAOBJS)





# Rotulo referente a exclusao de todos os codigos-objeto e executaveis gerados, exceto os executaveis
# que indicam a combinacao entre sistema operacional e compilador/link-editor.


clean:
	rm -f *.o $(ALL)





# Rotulo referente a exclusao de todos os codigos-objeto e executaveis gerados.

clean-all:
	rm -f *.o $(ALL) *-FreeBSD-* *-Linux-*





# Rotulo referente a exclusao de todos os codigos-objeto e executaveis gerados no FreeBSD.

clean-freebsd:
	rm -f *.o *-FreeBSD-*





# Rotulo referente a exclusao de todos os codigos-objeto e executaveis gerados no Linux.

clean-linux:
	rm -f *.o *-Linux-*










# $RCSfile: GNUmakefile,v $
@


1.23
log
@Implementacao da funcao CalcularSerieHarmonicaAlternada utilizando o laco de repeticao while e a funcao CalcularExponencial.
@
text
@d10 1
a10 1
# $Date: 2019/04/24 07:10:18 $
d12 3
d200 1
d267 2
a268 1
	 aula0502d
d446 4
@


1.22
log
@Implementacao da funcao CalcularSerieHarmonicaAlternada utilizando o laco de repeticao for e a funcao CalcularExponencial.
@
text
@d10 1
a10 1
# $Date: 2019/04/24 06:56:09 $
d12 3
d196 1
d262 2
a263 1
	 aula0502c
d437 4
@


1.21
log
@Implementacao da funcao CalcularSerieHarmonicaAlternada utilizando o laco de repeticao do ... while e a funcao CalcularExponencial.
@
text
@d10 1
a10 1
# $Date: 2019/04/24 06:42:46 $
d12 3
d192 1
d257 2
a258 1
	 aula0502b
d428 4
@


1.20
log
@Implementacao da funcao CalcularSerieHarmonicaAlternada utilizando recursividade e a funcao CalcularExponencial.
@
text
@d10 1
a10 1
# $Date: 2019/04/19 02:40:36 $
d12 3
d188 1
d252 2
a253 1
AULA05 = aula0502a
d419 4
@


1.19
log
@Implementacao da funcao CalcularExponencial utilizando o laco de repeticao while.
@
text
@d10 1
a10 1
# $Date: 2019/04/19 02:28:58 $
d12 3
a119 1

d127 8
d182 17
d246 8
d256 9
a264 1
EXECS = $(AULA01) $(AULA02) $(AULA03) $(AULA04)
d272 1
a272 1
ALL = $(EXECS)
d403 21
@


1.18
log
@Implementacao da funcao CalcularExponencial utilizando o laco de repeticao for.
@
text
@d10 1
a10 1
# $Date: 2019/04/19 02:16:16 $
d12 3
d166 1
d212 2
a213 1
	 aula0402c
d355 4
@


1.17
log
@Implementacao da funcao CalcularExponencial utilizando o laco de repeticao do ... while.
@
text
@d10 1
a10 1
# $Date: 2019/04/16 14:22:31 $
d12 3
d162 1
d207 2
a208 1
	 aula0402b
d346 4
@


1.16
log
@Implementacao da funcao CalcularExponencial utilizando recursividade.
@
text
@d10 1
a10 1
# $Date: 2019/04/10 16:51:54 $
d12 3
d158 1
d202 2
a203 1
AULA04 = aula0402a
d337 4
@


1.15
log
@Implementacao da funcao CalcularMaximoDivisorComum utilizando o laco de repeticao while.
@
text
@d10 1
a10 1
# $Date: 2019/04/10 16:32:41 $
d12 3
d152 8
d196 8
d206 1
a206 1
EXECS = $(AULA01) $(AULA02) $(AULA03)
d320 12
@


1.14
log
@Implementacao da funcao CalcularMaximoDivisorComum utilizando o laco de repeticao for.
@
text
@d10 1
a10 1
# $Date: 2019/04/10 16:15:27 $
d12 3
d143 1
d178 2
a179 1
	 aula0302c
d297 4
@


1.13
log
@Implementacao da funcao CalcularMaximoDivisorComum utilizando o laco de repeticao do ... while.
@
text
@d10 1
a10 1
# $Date: 2019/04/10 16:03:52 $
d12 3
d139 1
d173 2
a174 1
	 aula0302b
d288 4
@


1.12
log
@Implementacao da funcao CalcularMaximoDivisorComum utilizando recursividade.
@
text
@d10 1
a10 1
# $Date: 2019/04/05 02:44:32 $
d12 3
d135 1
d168 2
a169 1
AULA03 = aula0302a
d279 4
@


1.11
log
@Implementacao da Serie de Fibonacci utilizando o laco de repeticao while.
@
text
@d10 1
a10 1
# $Date: 2019/04/05 02:32:32 $
d12 3
d129 8
d162 8
d172 1
a172 1
EXECS = $(AULA01) $(AULA02) 
d262 12
@


1.10
log
@Implementacao da Serie de Fibonacci utilizando o laco de repeticao for.
@
text
@d10 1
a10 1
# $Date: 2019/04/05 02:18:09 $
d12 3
d120 1
d144 2
a145 1
	 aula0202c
d239 4
@


1.9
log
@Implementacao da Serie de Fibonacci utilizando o laco de repeticao do ... while.
@
text
@d10 1
a10 1
# $Date: 2019/04/05 01:58:27 $
d12 3
d116 1
d139 2
a140 1
	 aula0202b
d230 4
@


1.8
log
@Implementacao da Serie de Fibonacci utilizando recursividade.
@
text
@d10 1
a10 1
# $Date: 2019/03/29 06:30:56 $
d12 3
d112 1
d134 2
a135 1
AULA02 = aula0202a
d221 4
@


1.7
log
@Inclusao dos tipos basicos combinados com os modificadores de sinal e com os modificadores de largura da linguagem C.
@
text
@d10 1
a10 1
# $Date: 2019/03/29 06:19:54 $
d12 3
d106 8
d128 8
d138 1
a138 1
EXECS = $(AULA01) 
d204 12
@


1.6
log
@Inclusao dos tipos basicos combinados com os modificadores de largura da linguagem C.
@
text
@d10 1
a10 1
# $Date: 2019/03/29 06:10:58 $
d12 3
d97 1
d110 2
a111 1
	 aula0106
d181 4
@


1.5
log
@Inclusao dos tipos basicos combinados com modificadores de sinal da linguagem C.
@
text
@d10 1
a10 1
# $Date: 2019/03/29 05:56:48 $
d12 3
d93 1
d105 2
a106 1
	 aula0105
d172 4
@


1.4
log
@Inclusao dos modificadores de sinal combinados com os modificadores de largura da linguagem C.
@
text
@d10 1
a10 1
# $Date: 2019/03/29 05:44:48 $
d12 3
d89 1
d100 2
a101 1
	 aula0104
d163 4
@


1.3
log
@Inclusao dos modificadores de largura da linguagem C.
@
text
@d10 1
a10 1
# $Date: 2019/03/29 05:28:55 $
d12 3
d85 1
d95 2
a96 1
	 aula0103
d154 4
@


1.2
log
@Inclusao dos modificadores de sinal da linguagem C.
@
text
@d10 1
a10 1
# $Date: 2019/03/29 05:16:54 $
d12 3
d81 1
d90 2
a91 1
	 aula0102
d145 4
@


1.1
log
@Initial revision
@
text
@d9 6
a14 3
# $Author$
# $Date$
# $Log$
d77 1
d85 2
a86 1
AULA01 = aula0101
d138 4
d189 1
a189 1
# $RCSfile$
@
